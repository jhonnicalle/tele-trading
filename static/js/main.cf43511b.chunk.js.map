{"version":3,"sources":["components/ContactUs/ContactUsStyles.js","components/ContactUs/ContactUs.js","components/Header/HeaderStyles.js","components/Header/Header.js","components/Services/ServicesStyles.js","components/Services/Services.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","require","theme","root","flexGrow","titleContact","padding","spacing","color","paper","backgroundColor","textAlign","height","palette","text","primary","input","marginBottom","button","borderRadius","ContactUs","classes","className","Container","Typography","variant","align","Grid","container","item","xs","sm","Paper","gutterBottom","Divider","TextField","id","label","fullWidth","multiline","rows","Button","size","endIcon","Send","secondary","Header","direction","justify","alignItems","md","card","border","divider","Services","title","List","ListItem","ListItemText","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf43511b.chunk.js","sourcesContent":["const { makeStyles } = require(\"@material-ui/core\");\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,    \n  },\n  titleContact: {\n    padding: theme.spacing(2),\n    color: \"#FFFFF1\"\n  },\n  paper: {\n    backgroundColor: '#FFFFFFAA',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    height: `calc(100% - ${theme.spacing(2)}px)`,\n    color: theme.palette.text.primary,\n  },\n  input: {\n    marginBottom: theme.spacing(2),\n  },\n  button: {    \n    borderRadius: '20px'\n  },\n}));","import React from 'react'\nimport { Button, Container, Divider, Grid, Paper, TextField, Typography } from '@material-ui/core'\nimport { Send } from '@material-ui/icons';\nimport './ContactUs.css'\nimport { useStyles } from './ContactUsStyles'\n\nconst ContactUs = () => {\n  const classes = useStyles()\n  return (\n    <div className='background-screen-contactus'>\n      <div className='transparent-backgrund-contactus'>\n        <Container>\n          <Typography variant=\"h3\" align='center' className={classes.titleContact}>\n            CONTACTANOS\n          </Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} >\n              <Paper className={classes.paper}>\n                <Grid item xs={12}>\n                  <Typography variant=\"h5\" align='center' className={classes.titleContact}>\n                    CORREO ELECTRÓNICO\n                  </Typography>\n                  <Typography variant=\"body1\" align='center' gutterBottom>\n                    admin@tele-trading.com\n                  </Typography>\n                </Grid>\n               \n                <Divider />\n                <Typography variant=\"h5\" align='center' className={classes.titleContact}>\n                  TELÉFONO\n                </Typography>\n                <Typography variant=\"body1\" align='center' gutterBottom>\n                  +34 642 270296\n                </Typography>\n                <Divider />\n                <Typography variant=\"h5\" align='center' className={classes.titleContact}>\n                  DIRECCIÓN\n                </Typography>\n                <Typography variant=\"body1\" align='center' gutterBottom>\n                  Calle General Vara de Rey 26, Logroño, La Rioja. CP26002, España\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h4\" align='center' className={classes.titleContact}>\n                  CONSULTA\n                </Typography>\n                <Typography className={classes.input} variant=\"body1\" gutterBottom>\n                  Si tienes alguna duda, escribenos!\n                </Typography>\n                <TextField className={classes.input} id=\"outlined-basic\" label=\"Nombre y apellido\" variant=\"outlined\" fullWidth/>\n                <TextField className={classes.input} id=\"outlined-basic\" label=\"Correo electrónico\" variant=\"outlined\" fullWidth/>\n                <TextField\n                  className={classes.input}\n                  id=\"outlined-multiline-static\"\n                  label=\"Mensaje\"\n                  multiline\n                  rows={8}                  \n                  variant=\"outlined\"\n                  fullWidth\n                />\n                <Button\n                  variant=\"outlined\"\n                  size=\"large\"\n                  color=\"primary\"\n                  className={classes.button}\n                  endIcon={<Send />}\n                >\n                  ENVIAR\n                </Button>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </div>\n  )\n}\n\nexport default ContactUs","const { makeStyles } = require(\"@material-ui/core\");\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    // [theme.breakpoints.down('md')]: {\n    //   display: 'inline',\n    // },\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));","import React from 'react'\nimport { Container, Grid } from '@material-ui/core'\nimport './Header.css'\nimport { useStyles } from './HeaderStyles'\n\nconst Header = () => {\n  const classes = useStyles()\n  return (\n    <div className='background-screen-header'>\n      <div className='transparent-background-header'>\n        <Container>\n          <Grid container className={classes.root} direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item className={classes.paper} xs={0} md={4} >\n              <h1>LOGO</h1>\n            </Grid>\n            <Grid item className={classes.paper} xs={12} md={8} >\n              <div className=\"home-info\">\n                <h1 className=\"title\">BOX</h1>\n                <p>Somos tu aliado de negocios en España, Portugal y China Contamos con la experiencia,\n                    acompañando a nuestros clientes en el proceso de optimización de manufacturación, compras\n                    y logísticas en La Península Ibérica, contamos con socios estratégicos en China, contribuyendo\n                    en el desarrollo de productos de calidad, precios competitivos, valores agregados y novedosas\n                    estrategias comerciales, dando como resultado la satisfacción de un negocio rentable a todos\n                    nuestros clientes. </p>\n              \n               \n              </div>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </div>\n    \n  )\n}\n\nexport default Header","const { makeStyles } = require(\"@material-ui/core\");\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,    \n  },\n  titleContact: {\n    padding: theme.spacing(2),\n    color: \"#FFFFF1\"\n  },\n  paper: {\n    backgroundColor: '#FFFFFFAA',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    height: `calc(100% - ${theme.spacing(2)}px)`,\n    color: theme.palette.text.primary,\n  },\n  card: {\n    backgroundColor: theme.palette.text.primary,\n    color: '#FFFFFFAA',\n    border: '1px solid black',\n    borderRadius: 10\n  },\n  divider: {\n    backgroundColor: '#e6e6e61f'\n  }\n}));","import { Container, Divider, Grid, List, ListItem, ListItemText, Paper, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { useStyles } from './ServicesStyles'\nimport './Services.css'\n\nconst Services = () => {\n  const classes = useStyles()\n  return (\n    <div className='background-screen-services'>\n      <Container>\n        \n        <Typography variant=\"h2\" align='center' gutterBottom>\n          SERVICIOS\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Nos especializamos en: \n            </Typography>\n            <div className={classes.card}>\n              <List>              \n                <ListItem>\n                  <ListItemText primary=\"1. BÚSQUEDA DE PRODUCTOS Y PROVEEDORES\" />\n                </ListItem>\n                <Divider className={classes.divider}/>\n                <ListItem>\n                  <ListItemText primary=\"2. ACOMPAÑAMIENTO EN LAS NEGOCIACIONES COMPRADORES, PROVEEDORES Y PRODUCTORES. \" />\n                </ListItem>\n                <Divider className={classes.divider}/>\n                <ListItem>\n                  <ListItemText primary=\"3. CONTROL DE CALIDAD DE LOS PRODUCTOS.\" />\n                </ListItem>\n                <Divider className={classes.divider}/>\n                <ListItem>\n                  <ListItemText primary=\"4. LOGÍSTICA INTERNACIONAL\" />\n                </ListItem>\n              </List>\n            </div>\n          </Grid>          \n          <Grid item xs={12} sm={8}>\n            <Paper className={classes.paper}>\n\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n\nexport default Services","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ContactUs from './components/ContactUs/ContactUs';\nimport Header from './components/Header/Header';\nimport Services from './components/Services/Services';\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div>\n        <Header />\n        <Services />\n        <ContactUs />\n      </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}